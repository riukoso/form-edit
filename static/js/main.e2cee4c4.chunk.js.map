{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","user","email","type","comment","btn","className","onSubmit","for","required","id","value","username","onChange","e","setUsername","target","placeholder","setEmail","setType","disabled","setComment","App","useState","toggle","setToggle","onClick","icon","faEdit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAuBeA,EAvBF,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,IACvC,OACM,uBAAMC,UAAU,iBAAiBC,SAAUF,EAA3C,UACE,uBAAOG,IAAI,WAAX,sBACA,uBAAOC,UAAQ,EAACC,GAAG,WAAWC,MAAOV,EAAKW,SAAUC,SAAU,SAACC,GAAD,OAAKb,EAAKc,YAAYD,EAAEE,OAAOL,QAAQR,KAAK,OAAOc,YAAY,aAC7H,uBAAOT,IAAI,QAAX,mBACA,uBAAOC,UAAQ,EAACC,GAAG,QAAQC,MAAOT,EAAMA,MAAOW,SAAU,SAACC,GAAD,OAAKZ,EAAMgB,SAASJ,EAAEE,OAAOL,QAAQR,KAAK,QAAQc,YAAY,UACvH,uBAAOT,IAAI,OAAX,oBACA,yBAAQC,UAAQ,EAACC,GAAG,OAAOC,MAAOR,EAAKA,KAAMU,SAAU,SAACC,GAAD,OAAKX,EAAKgB,QAAQL,EAAEE,OAAOL,QAAlF,UACE,wBAAQS,UAAQ,EAACT,MAAM,GAAvB,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,sBAEF,uBAAOH,IAAI,UAAX,yBACA,0BAAUC,UAAQ,EAACE,MAAOP,EAAQA,QAASS,SAAU,SAACC,GAAD,OAAKV,EAAQiB,WAAWP,EAAEE,OAAOL,QAAQD,GAAG,UAAUO,YAAY,kBACvH,uBAAOX,UAAU,MAAMH,KAAK,SAASQ,MAAM,eC0BxCW,EArCH,WACV,MAAgCC,mBAAS,IAAzC,mBAAOX,EAAP,KAAiBG,EAAjB,KACA,EAA0BQ,mBAAS,IAAnC,mBAAOrB,EAAP,KAAcgB,EAAd,KACA,EAAwBK,mBAAS,IAAjC,mBAAOpB,EAAP,KAAagB,EAAb,KACA,EAA8BI,mBAAS,IAAvC,mBAAOnB,EAAP,KAAgBiB,EAAhB,KAEA,EAA4BE,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,OACE,qBAAKnB,UAAU,iBAAf,SACIkB,EASA,sBAAKlB,UAAU,iBAAf,UACE,yCACA,mBAAGA,UAAU,iBAAb,SAA+BM,IAC/B,sCACA,mBAAGN,UAAU,iBAAb,SAA+BJ,IAC/B,uCACA,mBAAGI,UAAU,iBAAb,SAA+BH,IAC/B,wCACA,mBAAGG,UAAU,iBAAb,SAA+BF,IAC/B,yBAAQsB,QAAS,kBAAID,GAAU,IAAQnB,UAAU,MAAjD,UACE,cAAC,IAAD,CAAiBqB,KAAMC,MADzB,cAjBF,cAAC,EAAD,CACE3B,KAAM,CAAEW,WAAUG,eAClBb,MAAO,CAAEA,QAAOgB,YAChBf,KAAM,CAAEA,OAAMgB,WACdf,QAAS,CAAEA,UAASiB,cACpBhB,IAAK,kBAAMoB,GAAU,SCXhBI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e2cee4c4.chunk.js","sourcesContent":["const Form = ({user, email, type, comment, btn}) =>{\r\n    return (\r\n          <form className=\"form-container\" onSubmit={btn}>\r\n            <label for=\"username\">Username</label>\r\n            <input required id=\"username\" value={user.username} onChange={(e)=>user.setUsername(e.target.value)} type=\"text\" placeholder=\"username\"/>\r\n            <label for=\"email\">Email</label>\r\n            <input required id=\"email\" value={email.email} onChange={(e)=>email.setEmail(e.target.value)} type=\"email\" placeholder=\"email\"/>\r\n            <label for=\"type\">Reason</label>\r\n            <select required id=\"type\" value={type.type} onChange={(e)=>type.setType(e.target.value)}>\r\n              <option disabled value=\"\">select</option>\r\n              <option value=\"query\">query</option>\r\n              <option value=\"comment\">comment</option>\r\n              <option value=\"feedback\">feedback</option>\r\n              <option value=\"complaint\">complaint</option>\r\n              <option value=\"other\">other</option>\r\n            </select>\r\n            <label for=\"content\">Talk to us!</label>\r\n            <textarea required value={comment.comment} onChange={(e)=>comment.setComment(e.target.value)} id=\"content\" placeholder=\"write here...\"/>\r\n            <input className=\"btn\" type=\"submit\" value=\"submit\"></input>\r\n          </form>\r\n      );\r\n}\r\n\r\nexport default Form","import { useState } from \"react\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Form from \"./Form\";\n\nconst App = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const [toggle, setToggle] = useState(false);\n\n  return (\n    <div className=\"main-container\">\n      {!toggle ? (\n        <Form\n          user={{ username, setUsername }}\n          email={{ email, setEmail }}\n          type={{ type, setType }}\n          comment={{ comment, setComment }}\n          btn={() => setToggle(true)}\n        />\n      ) : (\n        <div className=\"info-container\">\n          <p>Username</p>\n          <p className=\"info-submitted\">{username}</p>\n          <p>Email</p>\n          <p className=\"info-submitted\">{email}</p>\n          <p>Reason</p>\n          <p className=\"info-submitted\">{type}</p>\n          <p>Comment</p>\n          <p className=\"info-submitted\">{comment}</p>\n          <button onClick={()=>setToggle(false)} className=\"btn\">\n            <FontAwesomeIcon icon={faEdit} /> Edit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}